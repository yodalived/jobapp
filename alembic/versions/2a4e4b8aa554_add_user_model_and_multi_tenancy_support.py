"""Add user model and multi-tenancy support

Revision ID: 2a4e4b8aa554
Revises: 7809fc6f55f2
Create Date: 2025-06-12 20:36:22.300996

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2a4e4b8aa554'
down_revision: Union[str, None] = '7809fc6f55f2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('email_verified', sa.Boolean(), nullable=True),
    sa.Column('subscription_tier', sa.Enum('FREE', 'STARTER', 'PROFESSIONAL', 'ENTERPRISE', name='subscriptiontier'), nullable=True),
    sa.Column('subscription_expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('applications_count', sa.Integer(), nullable=True),
    sa.Column('resumes_generated_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.add_column('application_notes', sa.Column('user_id', sa.Integer(), nullable=False))
    op.create_index(op.f('ix_application_notes_user_id'), 'application_notes', ['user_id'], unique=False)
    op.create_foreign_key(None, 'application_notes', 'users', ['user_id'], ['id'])
    op.add_column('companies', sa.Column('user_id', sa.Integer(), nullable=False))
    op.create_index(op.f('ix_companies_user_id'), 'companies', ['user_id'], unique=False)
    op.create_foreign_key(None, 'companies', 'users', ['user_id'], ['id'])
    op.add_column('job_applications', sa.Column('user_id', sa.Integer(), nullable=False))
    op.create_index(op.f('ix_job_applications_user_id'), 'job_applications', ['user_id'], unique=False)
    op.create_foreign_key(None, 'job_applications', 'users', ['user_id'], ['id'])
    op.add_column('resume_versions', sa.Column('user_id', sa.Integer(), nullable=False))
    op.create_index(op.f('ix_resume_versions_user_id'), 'resume_versions', ['user_id'], unique=False)
    op.create_foreign_key(None, 'resume_versions', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'resume_versions', type_='foreignkey')
    op.drop_index(op.f('ix_resume_versions_user_id'), table_name='resume_versions')
    op.drop_column('resume_versions', 'user_id')
    op.drop_constraint(None, 'job_applications', type_='foreignkey')
    op.drop_index(op.f('ix_job_applications_user_id'), table_name='job_applications')
    op.drop_column('job_applications', 'user_id')
    op.drop_constraint(None, 'companies', type_='foreignkey')
    op.drop_index(op.f('ix_companies_user_id'), table_name='companies')
    op.drop_column('companies', 'user_id')
    op.drop_constraint(None, 'application_notes', type_='foreignkey')
    op.drop_index(op.f('ix_application_notes_user_id'), table_name='application_notes')
    op.drop_column('application_notes', 'user_id')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
